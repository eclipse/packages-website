<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eclipse IoT Packages on Eclipse IoT Packages™</title>
    <link>https://eclipse.org/packages/</link>
    <description>Recent content in Eclipse IoT Packages on Eclipse IoT Packages™</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © Eclipse Foundation, Inc. All Rights Reserved.</copyright>
    
	<atom:link href="https://eclipse.org/packages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What packages can use?</title>
      <link>https://eclipse.org/packages/faq/02_kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/faq/02_kubernetes/</guid>
      <description>Packages must be self-contained, and not require any additional external service in order to run.
It should be possible to simply start up a local cluster in Minikube and deploy it right away. At the same time it should be possible to run them on any other Kubernetes based solution, in the real cloud.</description>
    </item>
    
    <item>
      <title>What is required to create a new package?</title>
      <link>https://eclipse.org/packages/faq/03_new_package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/faq/03_new_package/</guid>
      <description>We have a full page dedicated to this question: Contribute.</description>
    </item>
    
    <item>
      <title>Who is involved in this project?</title>
      <link>https://eclipse.org/packages/faq/04_who/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/faq/04_who/</guid>
      <description>Take a look at the Who&#39;s Involved page of the project.</description>
    </item>
    
    <item>
      <title>Why aren&#39;t you using Tiller?</title>
      <link>https://eclipse.org/packages/faq/05_tiller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/faq/05_tiller/</guid>
      <description>Tiller is a server side component for Helm. It allows the Helm client, which is on your local machine, to talk to the cluster, and let it perform the deployment.
There are several aspects to that, which make the use of Tiller complicated. The main concern is security (also see Exploring the Security of Helm). The default deployment of Tiller is rather insecure. That may work on a local instance of Kubernetes, but not when using an actual, hosted version.</description>
    </item>
    
    <item>
      <title>Why are you using insecure settings?</title>
      <link>https://eclipse.org/packages/faq/06_insecure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/faq/06_insecure/</guid>
      <description>Every now and then, you might spot a --insecure (or equivalent settings) in the commands.
It is unfortunate, but sometimes it is necessary. With the availability of Let&#39;s Encrypt, it would actually be rather simple to add proper TLS certificates. But when you are running a local minikube instance, you can&#39;t properly use certificates. Also does the process of getting a proper Let&#39;s Encrypt certificate still need a significant effort and understanding, on the user side, especially when requesting a wildcard certificate.</description>
    </item>
    
    <item>
      <title>My question isn&#39;t answered here!</title>
      <link>https://eclipse.org/packages/faq/xx_404/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/faq/xx_404/</guid>
      <description>Your chance to contribute! Raise the question on GitHub, and we will take a look.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://eclipse.org/packages/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/about/</guid>
      <description>Eclipse IoT packages provide recipies for combining Eclipse IoT projects, to solve real world IoT problems. The Eclipse IoT Packages project provides a home for use case focused IoT deployments, based on Eclipse IoT technology. It takes the building blocks that the different projects provide, and adds the necessary glue code, needed to create more complete setups. It acts as a showcase of what is possible with Eclipse IoT, and enables you to try it out first hand.</description>
    </item>
    
    <item>
      <title>Contributions welcome</title>
      <link>https://eclipse.org/packages/contribute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/contribute/</guid>
      <description>Contributions to this project are very welcome. And contributions can come in many different forms, one of the is code.
Providing feedback Feedback is always welcome. The more constructive it is, the more impact it will have.
The easiest way to provide feedback is through GitHub issues of the project.
Improving an existing package There is always room for improvement. Found a bug, have an idea how to make things better.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://eclipse.org/packages/packages/package-zero/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/packages/package-zero/installation/</guid>
      <description>You will need a Kubernetes instance in order to deploy this package. If you haven&#39;t done so already, take a look at our Kubernetes installation page. Any Kubernetes compatible cluster will do, as long as it meets the requirements.
Check access Be sure that you are logged in into your Kubernetes cluster:
kubectl version   This should print out the version of the client, but must also print out the version of the server.</description>
    </item>
    
    <item>
      <title>Learn more</title>
      <link>https://eclipse.org/packages/packages/package-zero/learn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/packages/package-zero/learn/</guid>
      <description>Functionality This package gives you a scalable, cloud based IoT messaging platform. This allows you the equip your sensor like devices to report telemetry data to a central location and receive back commands from the cloud backend.
The IoT messaging layer takes care of normalizing the various IoT protocol on AMQP 1.0, so that the backend applications can focus on processing the messages, rather than implementing various protocols. The messaging layer also provides the authentication and authorization layer.</description>
    </item>
    
    <item>
      <title>Pre-Requisites</title>
      <link>https://eclipse.org/packages/prereqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/prereqs/</guid>
      <description>Kubernetes Client First of all, you will need a command tool named kubectl. This application allows you to interact with your Kubernetes cluster from the command line. While Kubernetes also comes with a Web UI, it is much simpler to document the installation procedures using command line tool. Also does the Web UI change over time, and with different Kubernetes variants. However the kubectl tool works with all variations of Kubernetes, as it uses the standardized API in the background.</description>
    </item>
    
    <item>
      <title>Take a tour</title>
      <link>https://eclipse.org/packages/packages/package-zero/tour/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eclipse.org/packages/packages/package-zero/tour/</guid>
      <description>Under construction This tutorial is still under construction, and not finished yet. Of course, your are still welcome to it. Take a look and give some feedback.
Just be aware, that some content might still be missing, change over time, or that you might experience some issues when testing.  The following examples will use information which depends on your environment. All of this information is listed in this section, and will be set as environment variables, so that all command using it, can make use of those variables:</description>
    </item>
    
  </channel>
</rss>